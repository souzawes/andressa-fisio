generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model appointments {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  patient_id String?   @db.Uuid
  type       String?   @db.VarChar(255)
  date       DateTime? @db.Date
  start_time DateTime? @db.Time(6)
  end_time   DateTime? @db.Time(6)
  patients   patients? @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model classes {
  id                 String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name               String               @db.VarChar(255)
  creation_date      DateTime?            @db.Date
  patients_classes   patients_classes[]
  recurring_sessions recurring_sessions[]
}

model patients {
  id               String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name             String             @db.VarChar(255)
  cpf              String?            @unique @db.VarChar(14)
  address          String?            @db.VarChar(255)
  neighborhood     String?            @db.VarChar(255)
  number_house     String?            @db.VarChar(10)
  date_of_birth    DateTime           @db.Date
  sex              String?            @db.VarChar(10)
  civil_state      String?            @db.VarChar(20)
  job              String?            @db.VarChar(255)
  appointments     appointments[]
  patients_classes patients_classes[]
}

model patients_classes {
  patient_id String   @db.Uuid
  class_id   String   @db.Uuid
  classes    classes  @relation(fields: [class_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  patients   patients @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([patient_id, class_id])
}

model recurring_sessions {
  id                     String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  class_id               String?   @db.Uuid
  start_date             DateTime? @db.Date
  end_date               DateTime? @db.Date
  start_time             DateTime? @db.Time(6)
  end_time               DateTime? @db.Time(6)
  recurrence_pattern     String?   @db.VarChar(255)
  recurrence_interval    Int?
  ocuurence_days_of_week String?   @db.VarChar(255)
  rrule                  String?   @db.VarChar(255)
  classes                classes?  @relation(fields: [class_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id       String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name     String @db.VarChar(255)
  email    String @unique
  password String
}
